@namespace BlazorTutorial.Components.Pages
@rendermode InteractiveServer
@page "/basket"

@inject BasketService BasketService
@inject ProductService ProductService

<div class="max-w-7xl px-4 sm:px-4 mx-auto">
    <h2 class="text-2xl font-semibold mb-4">Shopping Basket</h2>

    @if (BasketItems.Count == 0)
    {
        <p class="text-gray-500">Your basket is empty.</p>
    }
    else
    {
        <ul role="list" class="divide-y divide-gray-200">
            @foreach (BasketItem item in BasketItems)
            {
                if (item.Product == null) continue;

                <li class="flex py-4">
                    <div class="h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200">
                        <img src="@item.Product.ImageUrl" alt="@item.Product.Name" class="h-full w-full object-cover" />
                    </div>
                    <div class="ml-4 flex flex-1 flex-col">
                        <div class="flex justify-between text-base font-medium text-gray-900">
                            <h3>@item.Product.Name</h3>
                            <p>$@item.Product.Price.ToString("N2")</p>
                        </div>
                        <div class="flex flex-1 items-end justify-between text-sm mt-2">
                            <p class="text-gray-500">Qty @item.Quantity</p>
                            <button class="text-blue-600 hover:text-blue-500" @onclick="() => RemoveItem(item.ProductId)">
                                Remove
                            </button>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
    <div class="border-t border-gray-200 pt-4 mt-4">
        <div class="flex justify-between text-xl font-bold text-gray-900">
            <span>Subtotal</span>
            <span>$@Subtotal.ToString("N2")</span>
        </div>
        <p class="mt-0.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>
        <div class="flex justify-end mt-4 w-full">
            <NavLink type="button" href="/checkout"
                class="bg-blue-600 text-white px-4 py-3 rounded-md hover:bg-blue-700 ml-auto">
                Proceed to Checkout
            </NavLink>
        </div>
    </div>
</div>

@code {
    private ICollection<BasketItem> BasketItems = new List<BasketItem>();

    protected override async Task OnInitializedAsync()
    {
        await LoadBasketItems();
    }

    private async Task LoadBasketItems()
    {
        BasketItems.Clear();

        foreach (BasketItem? item in BasketService.GetBasket().Items)
        {
            Product? product = await ProductService.GetProductAsync(item.ProductId);
            BasketItems.Add(new BasketItem
            {
                ProductId = item.ProductId,
                Quantity = item.Quantity,
                Product = product
            });
        }
    }

    private decimal Subtotal => BasketItems.Sum(i => (i.Product?.Price ?? 0) * i.Quantity);

    private void RemoveItem(string productId)
    {
        BasketItem? basketItem = BasketService.GetBasket().Items.FirstOrDefault(i => i.ProductId == productId);
        if (basketItem != null)
        {
            basketItem.Quantity--;

            if (basketItem.Quantity <= 0)
            {
                BasketService.RemoveItem(productId);
            }
        }

        BasketItem? item = BasketItems.FirstOrDefault(i => i.ProductId == productId);
        if (item != null)
        {
            item.Quantity--;

            if (item.Quantity <= 0)
            {
                BasketItems.Remove(item);
            }
        }
    }
}
